from neo4j import GraphDatabaseclass Neo4jConnector:    def __init__(self, pubtrends_config):        if not Neo4jConnector.neo4j_configured(pubtrends_config):            raise Exception('Database is not configured properly.')        self.config = pubtrends_config        self.neo4jdriver = None        self.initialized = False    def check_connection(self):        if self.initialized:            return        self.initialized = True        try:            self.neo4jdriver = GraphDatabase.driver(                f'bolt://{self.config.neo4j_host}:{self.config.neo4j_port}',                auth=(self.config.neo4j_username, self.config.neo4j_password)            )            with self.neo4jdriver.session() as session:                session.run('Match () Return 1 Limit 1')        except Exception:            raise Exception('Failed to connect to database.')    def close_connection(self):        self.initialized = False        if self.neo4jdriver:            self.neo4jdriver.close()    @staticmethod    def neo4j_configured(pubtrends_config):        return pubtrends_config.neo4j_host and \               pubtrends_config.neo4j_port and \               pubtrends_config.neo4j_username and \               pubtrends_config.neo4j_password