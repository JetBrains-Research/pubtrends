import psycopg2class PostgresConnector:    def __init__(self, pubtrends_config, readonly=True):        self.config = pubtrends_config        self.readonly = readonly        self.postgres_connection = None        self.initialized = False    def check_connection(self):        if self.initialized:            return        self.initialized = True        if PostgresConnector.postgres_configured(self.config):            try:                connection_string = f"""                    host={self.config.postgres_host} \                    port={self.config.postgres_port} \                    dbname={self.config.postgres_database} \                    user={self.config.postgres_username} \                    password={self.config.postgres_password}                """.strip()                self.postgres_connection = psycopg2.connect(connection_string,)                if self.readonly:                    self.postgres_connection.set_session(readonly=True)            except Exception:                raise Exception('Failed to connect to database.')    def close_connection(self):        self.initialized = False        if self.postgres_connection:            self.postgres_connection.close()    @staticmethod    def postgres_configured(pubtrends_config):        return pubtrends_config.postgres_host and \               pubtrends_config.postgres_port and \               pubtrends_config.postgres_database and \               pubtrends_config.postgres_username and \               pubtrends_config.postgres_password