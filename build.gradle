buildscript {
    ext.kotlin_version = "2.2.0"
    ext.coroutines_version = "1.7.3"

    repositories {
        maven { url("https://cache-redirector.jetbrains.com/repo1.maven.org/maven2") }
        maven { url("https://cache-redirector.jetbrains.com/plugins.gradle.org/m2") }
        // In case of issues with cache redirector:
        // mavenCentral()
    }

    dependencies {
        classpath "gradle.plugin.com.github.johnrengelman:shadow:7.1.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: "base"
apply plugin: "checkstyle"

project (":") {
    repositories {
        maven { url("https://cache-redirector.jetbrains.com/repo1.maven.org/maven2") }
        maven { url("https://cache-redirector.jetbrains.com/plugins.gradle.org/m2") }
        // In case of issues with cache redirector:
        // mavenCentral()
    }

    apply plugin: "kotlin"
    apply plugin: "application"
    apply plugin: "com.github.johnrengelman.shadow"

    sourceCompatibility = 21
    targetCompatibility = sourceCompatibility
    compileKotlin { kotlinOptions.jvmTarget = sourceCompatibility }
    compileTestKotlin { kotlinOptions.jvmTarget = sourceCompatibility }

    dependencies {
        implementation("org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version")
        implementation("org.jetbrains.kotlin:kotlin-reflect:$kotlin_version")
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

        implementation("org.jetbrains.exposed:exposed:0.17.14")
        implementation("org.postgresql:postgresql:42.4.0")
        implementation("commons-net:commons-net:3.6")
        implementation("com.opencsv:opencsv:4.6")
        implementation("com.google.code.gson:gson:2.2.4")
        implementation("net.sf.jopt-simple:jopt-simple:5.0.4")
        implementation("com.fasterxml.jackson.core:jackson-databind:2.9.9")
        implementation("commons-codec:commons-codec:1.9")
        implementation("commons-io:commons-io:2.0.1")

        implementation("ch.qos.logback:logback-classic:1.2.3")
        implementation("ch.qos.logback:logback-core:1.2.3")
        implementation("org.slf4j:slf4j-api:1.7.25")

        implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version")
        implementation("org.jetbrains.kotlinx:kotlinx-coroutines-swing:$coroutines_version")

        testImplementation("junit:junit:4.+")
        testImplementation("org.jetbrains.kotlin:kotlin-test:$kotlin_version")

    }

    tasks.withType(Test) {
        // Continue execution even if tests for some of the sub-projects failed.
        ignoreFailures = true
        maxParallelForks = Runtime.runtime.availableProcessors()
        maxHeapSize = "512m"

        testLogging.showStandardStreams = true
    }

    test {
        include "**/*Test.class"
    }

    version = "dev"
    mainClassName = "org.jetbrains.bio.pubtrends.Main"
    applicationDefaultJvmArgs = ["-Xmx512m"]


    shadowJar {
        archiveBaseName.set("pubtrends")
        archiveVersion.set("${version}")
        archiveClassifier.set("")
        zip64 true
        mustRunAfter test
        // umm
        mustRunAfter clean
    }

    jar {
        manifest {
            attributes provider: "gradle"
            attributes "Application-Name": "PubTrends loader $version"
            attributes "Built-By": "JetBrains Research TeamCity"
        }
    }
}

wrapper {
    gradleVersion = "8.5"
}
