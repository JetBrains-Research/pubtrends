buildscript {
    ext.kotlin_version = '1.2.+'

    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'application'

apply plugin: 'base'
apply plugin: 'checkstyle'
apply plugin: 'com.github.johnrengelman.shadow'

version = 'dev'
mainClassName = "org.jetbrains.bio.pubtrends.crawler.MainKt"
applicationDefaultJvmArgs = ["-Xmx32G"]
sourceCompatibility = 1.8
targetCompatibility = sourceCompatibility
compileKotlin { kotlinOptions.jvmTarget = sourceCompatibility }
compileTestKotlin { kotlinOptions.jvmTarget = sourceCompatibility }

repositories {
    jcenter()
    maven { url 'https://jitpack.io' }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile 'org.jetbrains.kotlinx:kotlinx-support-jdk8:0.1'

    compile "org.jetbrains.exposed:exposed:0.10.5"
    compile "org.postgresql:postgresql:42.2.2"
    compile "commons-net:commons-net:3.6"
    compile "org.apache.logging.log4j:log4j-api:2.4.1"
    compile "org.apache.logging.log4j:log4j-core:2.4.1"

    testCompile 'junit:junit:4.+'
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
}

tasks.withType(Test) {
    // Continue execution even if tests for some of the sub-projects failed.
    ignoreFailures = true
    maxParallelForks = Runtime.runtime.availableProcessors()
    maxHeapSize = "1024m"

    testLogging.showStandardStreams = true
}

test {
    include '**/*Test.class'
}

shadowJar {
    baseName = 'pubtrends'
    classifier = ''
}

jar {
    baseName = 'singlejar'
    manifest.attributes provider: 'gradle'
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.1'
}
